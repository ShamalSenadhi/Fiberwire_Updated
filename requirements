# requirements.txt
streamlit==1.28.0
opencv-python-headless==4.8.1.78
Pillow==10.0.0
pytesseract==0.3.10
numpy==1.24.3
scipy==1.11.1
scikit-image==0.21.0
matplotlib==3.7.1
pandas==2.0.3

# packages.txt (for Streamlit Cloud - system dependencies)
tesseract-ocr
tesseract-ocr-eng
tesseract-ocr-ara
tesseract-ocr-chi-sim
tesseract-ocr-fra
tesseract-ocr-deu
tesseract-ocr-spa
tesseract-ocr-rus
libtesseract-dev
libgl1-mesa-glx
libglib2.0-0

# .streamlit/config.toml
[server]
headless = true
port = 8501
enableCORS = false
enableXsrfProtection = false
maxUploadSize = 200

[browser]
gatherUsageStats = false

[theme]
primaryColor = "#1f77b4"
backgroundColor = "#ffffff"
secondaryBackgroundColor = "#f0f8ff"
textColor = "#262730"

# Dockerfile (if using Docker)
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    tesseract-ocr-eng \
    tesseract-ocr-ara \
    tesseract-ocr-chi-sim \
    tesseract-ocr-fra \
    tesseract-ocr-deu \
    tesseract-ocr-spa \
    tesseract-ocr-rus \
    libtesseract-dev \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    ffmpeg \
    libsm6 \
    libxext6 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY . .

# Create uploads directory
RUN mkdir -p uploads

# Expose port
EXPOSE 8501

# Health check
HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health || exit 1

# Run the application
CMD ["streamlit", "run", "streamlit_ocr_app (1).py", "--server.port=8501", "--server.address=0.0.0.0"]

# docker-compose.yml
version: '3.8'
services:
  ocr-app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

# For Heroku - Procfile
web: sh setup.sh && streamlit run "streamlit_ocr_app (1).py" --server.port=$PORT --server.address=0.0.0.0

# For Heroku - setup.sh
#!/bin/bash
mkdir -p ~/.streamlit/

echo "\
[server]\n\
headless = true\n\
port = $PORT\n\
enableCORS = false\n\
maxUploadSize = 200\n\
\n\
[browser]\n\
gatherUsageStats = false\n\
" > ~/.streamlit/config.toml

# For Heroku - runtime.txt
python-3.11.6

# For Railway - railway.json
{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "startCommand": "streamlit run 'streamlit_ocr_app (1).py' --server.port $PORT --server.address 0.0.0.0",
    "healthcheckPath": "/_stcore/health",
    "healthcheckTimeout": 100,
    "restartPolicyType": "ON_FAILURE"
  }
}

# For Render - render.yaml
services:
  - type: web
    name: enhanced-ocr-app
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "streamlit run 'streamlit_ocr_app (1).py' --server.port $PORT --server.address 0.0.0.0"
    plan: free
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.6
    autoDeploy: false
